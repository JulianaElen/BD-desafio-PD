{
    "sourceFile": "frontend/src/pages/SeePartner.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1741299803142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741303463191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,63 @@\n-import React from 'react'\n+import React, { useState } from 'react'\n+import api from '../api';\n \n export default function SeePartner() {\n-  return (\n-    <div>SeePartner</div>\n-  )\n+    const [partnerId, setPartnerId] = useState(\"\");\n+    const [partnerData, setPartnerData] = useState<any | null>(null);\n+    const [loading, setLoading] = useState(false);\n+    const [error, setError] = useState<string | null>(null);\n+  \n+    const handleSearch = async () => {\n+      if (!partnerId) {\n+        setError(\"O ID é obrigatório!\");\n+        return;\n+      }\n+  \n+      setLoading(true);\n+      setError(null); // Resetando erro antes de tentar novamente\n+  \n+      try {\n+        const response = await api.get(`/partners/${partnerId}`);\n+        setPartnerData(response.data);\n+      } catch (err) {\n+        console.error(\"Erro ao buscar parceiro:\", err);\n+        setError(\"Erro ao buscar parceiro, tente novamente.\");\n+      } finally {\n+        setLoading(false);\n+      }\n+    };\n+  \n+    return (\n+      <div style={{ padding: \"20px\" }}>\n+        <h1>Buscar Parceiro por ID</h1>\n+        <input\n+          type=\"text\"\n+          placeholder=\"Digite o ID do parceiro\"\n+          value={partnerId}\n+          onChange={(e) => setPartnerId(e.target.value)}\n+          style={{ padding: \"10px\", marginBottom: \"20px\", fontSize: \"1rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}\n+        />\n+        <button\n+          onClick={handleSearch}\n+          disabled={loading}\n+          style={{ padding: \"10px\", fontSize: \"1rem\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}\n+        >\n+          {loading ? \"Buscando...\" : \"Buscar\"}\n+        </button>\n+  \n+        {error && <p style={{ color: \"red\", marginTop: \"20px\" }}>{error}</p>}\n+  \n+        {partnerData && (\n+          <div style={{ marginTop: \"20px\" }}>\n+            <h2>Dados do Parceiro</h2>\n+            <p><strong>ID:</strong> {partnerData.id}</p>\n+            <p><strong>Nome Fantasia:</strong> {partnerData.trading_name}</p>\n+            <p><strong>Nome do Dono:</strong> {partnerData.owner_name}</p>\n+            <p><strong>Documento:</strong> {partnerData.document}</p>\n+            <p><strong>Área de Cobertura:</strong> {JSON.stringify(partnerData.coverage_area)}</p>\n+            <p><strong>Endereço:</strong> {JSON.stringify(partnerData.address)}</p>\n+          </div>\n+        )}\n+      </div>\n+    )\n }\n"
                },
                {
                    "date": 1741303795684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,62 +2,62 @@\n import api from '../api';\n \n export default function SeePartner() {\n     const [partnerId, setPartnerId] = useState(\"\");\n-    const [partnerData, setPartnerData] = useState<any | null>(null);\n-    const [loading, setLoading] = useState(false);\n-    const [error, setError] = useState<string | null>(null);\n-  \n-    const handleSearch = async () => {\n-      if (!partnerId) {\n-        setError(\"O ID é obrigatório!\");\n-        return;\n-      }\n-  \n-      setLoading(true);\n-      setError(null); // Resetando erro antes de tentar novamente\n-  \n-      try {\n-        const response = await api.get(`/partners/${partnerId}`);\n-        setPartnerData(response.data);\n-      } catch (err) {\n-        console.error(\"Erro ao buscar parceiro:\", err);\n-        setError(\"Erro ao buscar parceiro, tente novamente.\");\n-      } finally {\n-        setLoading(false);\n-      }\n-    };\n-  \n-    return (\n-      <div style={{ padding: \"20px\" }}>\n-        <h1>Buscar Parceiro por ID</h1>\n-        <input\n-          type=\"text\"\n-          placeholder=\"Digite o ID do parceiro\"\n-          value={partnerId}\n-          onChange={(e) => setPartnerId(e.target.value)}\n-          style={{ padding: \"10px\", marginBottom: \"20px\", fontSize: \"1rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}\n-        />\n-        <button\n-          onClick={handleSearch}\n-          disabled={loading}\n-          style={{ padding: \"10px\", fontSize: \"1rem\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}\n-        >\n-          {loading ? \"Buscando...\" : \"Buscar\"}\n-        </button>\n-  \n-        {error && <p style={{ color: \"red\", marginTop: \"20px\" }}>{error}</p>}\n-  \n-        {partnerData && (\n-          <div style={{ marginTop: \"20px\" }}>\n-            <h2>Dados do Parceiro</h2>\n-            <p><strong>ID:</strong> {partnerData.id}</p>\n-            <p><strong>Nome Fantasia:</strong> {partnerData.trading_name}</p>\n-            <p><strong>Nome do Dono:</strong> {partnerData.owner_name}</p>\n-            <p><strong>Documento:</strong> {partnerData.document}</p>\n-            <p><strong>Área de Cobertura:</strong> {JSON.stringify(partnerData.coverage_area)}</p>\n-            <p><strong>Endereço:</strong> {JSON.stringify(partnerData.address)}</p>\n-          </div>\n-        )}\n-      </div>\n-    )\n+  const [partnerData, setPartnerData] = useState<any | null>(null);\n+  const [loading, setLoading] = useState(false);\n+  const [error, setError] = useState<string | null>(null);\n+\n+  const handleSearch = async () => {\n+    if (!partnerId) {\n+      setError(\"O ID é obrigatório!\");\n+      return;\n+    }\n+\n+    setLoading(true);\n+    setError(null); // Resetando erro antes de tentar novamente\n+\n+    try {\n+      const response = await api.get(`/partners/${partnerId}`);\n+      setPartnerData(response.data);\n+    } catch (err) {\n+      console.error(\"Erro ao buscar parceiro:\", err);\n+      setError(\"Erro ao buscar parceiro, tente novamente.\");\n+    } finally {\n+      setLoading(false);\n+    }\n+  };\n+\n+  return (\n+    <div style={{ padding: \"20px\" }}>\n+      <h1>Buscar Parceiro por ID</h1>\n+      <input\n+        type=\"text\"\n+        placeholder=\"Digite o ID do parceiro\"\n+        value={partnerId}\n+        onChange={(e) => setPartnerId(e.target.value)}\n+        style={{ padding: \"10px\", marginBottom: \"20px\", fontSize: \"1rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}\n+      />\n+      <button\n+        onClick={handleSearch}\n+        disabled={loading}\n+        style={{ padding: \"10px\", fontSize: \"1rem\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}\n+      >\n+        {loading ? \"Buscando...\" : \"Buscar\"}\n+      </button>\n+\n+      {error && <p style={{ color: \"red\", marginTop: \"20px\" }}>{error}</p>}\n+\n+      {partnerData && (\n+        <div style={{ marginTop: \"20px\" }}>\n+          <h2>Dados do Parceiro</h2>\n+          <p><strong>ID:</strong> {partnerData.id}</p>\n+          <p><strong>Nome Fantasia:</strong> {partnerData.trading_name}</p>\n+          <p><strong>Nome do Dono:</strong> {partnerData.owner_name}</p>\n+          <p><strong>Documento:</strong> {partnerData.document}</p>\n+          <p><strong>Área de Cobertura:</strong> {JSON.stringify(partnerData.coverage_area)}</p>\n+          <p><strong>Endereço:</strong> {JSON.stringify(partnerData.address)}</p>\n+        </div>\n+      )}\n+    </div>\n+  )\n }\n"
                },
                {
                    "date": 1741303951959,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,50 @@\n-import React, { useState } from 'react'\n+import React, { useState } from 'react';\n import api from '../api';\n \n+const styles = {\n+  container: {\n+    display: \"flex\",\n+    flexDirection: \"column\" as const,\n+    alignItems: \"center\",\n+    justifyContent: \"center\",\n+    marginTop: \"50px\",\n+  },\n+  title: {\n+    fontSize: \"2rem\",\n+    fontFamily: \"Arial, sans-serif\",\n+    marginBottom: \"20px\",\n+  },\n+  input: {\n+    padding: \"10px\",\n+    marginBottom: \"20px\",\n+    fontSize: \"1rem\",\n+    borderRadius: \"5px\",\n+    border: \"1px solid #ccc\",\n+  },\n+  button: {\n+    padding: \"10px\",\n+    fontSize: \"1rem\",\n+    backgroundColor: \"#007bff\",\n+    color: \"white\",\n+    border: \"none\",\n+    borderRadius: \"5px\",\n+    cursor: \"pointer\",\n+  },\n+  error: {\n+    color: \"red\",\n+    marginTop: \"20px\",\n+  },\n+  partnerInfo: {\n+    marginTop: \"20px\",\n+  },\n+  partnerDetail: {\n+    marginBottom: \"10px\",\n+  },\n+};\n+\n export default function SeePartner() {\n-    const [partnerId, setPartnerId] = useState(\"\");\n+  const [partnerId, setPartnerId] = useState(\"\");\n   const [partnerData, setPartnerData] = useState<any | null>(null);\n   const [loading, setLoading] = useState(false);\n   const [error, setError] = useState<string | null>(null);\n \n@@ -27,37 +68,37 @@\n     }\n   };\n \n   return (\n-    <div style={{ padding: \"20px\" }}>\n-      <h1>Buscar Parceiro por ID</h1>\n+    <div style={styles.container}>\n+      <h1 style={styles.title}>Buscar Parceiro por ID</h1>\n       <input\n         type=\"text\"\n         placeholder=\"Digite o ID do parceiro\"\n         value={partnerId}\n         onChange={(e) => setPartnerId(e.target.value)}\n-        style={{ padding: \"10px\", marginBottom: \"20px\", fontSize: \"1rem\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}\n+        style={styles.input}\n       />\n       <button\n         onClick={handleSearch}\n         disabled={loading}\n-        style={{ padding: \"10px\", fontSize: \"1rem\", backgroundColor: \"#007bff\", color: \"white\", border: \"none\", borderRadius: \"5px\", cursor: \"pointer\" }}\n+        style={styles.button}\n       >\n         {loading ? \"Buscando...\" : \"Buscar\"}\n       </button>\n \n-      {error && <p style={{ color: \"red\", marginTop: \"20px\" }}>{error}</p>}\n+      {error && <p style={styles.error}>{error}</p>}\n \n       {partnerData && (\n-        <div style={{ marginTop: \"20px\" }}>\n+        <div style={styles.partnerInfo}>\n           <h2>Dados do Parceiro</h2>\n-          <p><strong>ID:</strong> {partnerData.id}</p>\n-          <p><strong>Nome Fantasia:</strong> {partnerData.trading_name}</p>\n-          <p><strong>Nome do Dono:</strong> {partnerData.owner_name}</p>\n-          <p><strong>Documento:</strong> {partnerData.document}</p>\n-          <p><strong>Área de Cobertura:</strong> {JSON.stringify(partnerData.coverage_area)}</p>\n-          <p><strong>Endereço:</strong> {JSON.stringify(partnerData.address)}</p>\n+          <p style={styles.partnerDetail}><strong>ID:</strong> {partnerData.id}</p>\n+          <p style={styles.partnerDetail}><strong>Nome Fantasia:</strong> {partnerData.trading_name}</p>\n+          <p style={styles.partnerDetail}><strong>Nome do Dono:</strong> {partnerData.owner_name}</p>\n+          <p style={styles.partnerDetail}><strong>Documento:</strong> {partnerData.document}</p>\n+          <p style={styles.partnerDetail}><strong>Área de Cobertura:</strong> {JSON.stringify(partnerData.coverage_area)}</p>\n+          <p style={styles.partnerDetail}><strong>Endereço:</strong> {JSON.stringify(partnerData.address)}</p>\n         </div>\n       )}\n     </div>\n-  )\n+  );\n }\n"
                },
                {
                    "date": 1741304084511,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,22 +52,26 @@\n     if (!partnerId) {\n       setError(\"O ID é obrigatório!\");\n       return;\n     }\n-\n+  \n     setLoading(true);\n-    setError(null); // Resetando erro antes de tentar novamente\n-\n+    setError(null);\n+  \n     try {\n       const response = await api.get(`/partners/${partnerId}`);\n+      console.log(\"Resposta do servidor:\", response);\n+      \n+      // Tente fazer o parse\n       setPartnerData(response.data);\n     } catch (err) {\n       console.error(\"Erro ao buscar parceiro:\", err);\n       setError(\"Erro ao buscar parceiro, tente novamente.\");\n     } finally {\n       setLoading(false);\n     }\n   };\n+  \n \n   return (\n     <div style={styles.container}>\n       <h1 style={styles.title}>Buscar Parceiro por ID</h1>\n"
                },
                {
                    "date": 1741304291664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,12 +57,11 @@\n     setLoading(true);\n     setError(null);\n   \n     try {\n-      const response = await api.get(`/partners/${partnerId}`);\n+      const response = await api.get(`/partner/${partnerId}`);\n       console.log(\"Resposta do servidor:\", response);\n-      \n-      // Tente fazer o parse\n+    \n       setPartnerData(response.data);\n     } catch (err) {\n       console.error(\"Erro ao buscar parceiro:\", err);\n       setError(\"Erro ao buscar parceiro, tente novamente.\");\n"
                }
            ],
            "date": 1741299803142,
            "name": "Commit-0",
            "content": "import React from 'react'\n\nexport default function SeePartner() {\n  return (\n    <div>SeePartner</div>\n  )\n}\n"
        }
    ]
}