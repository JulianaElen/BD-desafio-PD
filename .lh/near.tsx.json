{
    "sourceFile": "near.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741298604942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741298604942,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\nimport api from \"../api\";\n\nconst styles = {\n  container: {\n    display: 'flex' as 'flex', \n    flexDirection: 'column' as 'column', \n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: \"50px\",\n  },\n  title: {\n    fontFamily: 'Arial, sans-serif',\n    color: '#333',\n    fontSize: '2rem',\n  },\n  input: {\n    padding: \"10px\",\n    marginBottom: \"10px\",\n    fontSize: \"1rem\",\n    borderRadius: \"5px\",\n    border: \"1px solid #ccc\",\n  },\n  button: {\n    padding: \"10px\",\n    fontSize: \"1rem\",\n    backgroundColor: \"#007bff\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n  },\n}\n\nexport default function NearPartner() {\n  const [lat, setLat] = useState<string>(\"\"); \n  const [lon, setLon] = useState<string>(\"\");\n  const [partner, setPartner] = useState<any>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSearch = async () => {\n    const parsedLat = parseFloat(lat);\n    const parsedLon = parseFloat(lon);\n\n    if (isNaN(parsedLat) || isNaN(parsedLon)) {\n      setError(\"Por favor, insira coordenadas válidas.\");\n      return;\n    }\n    console.log(\"Enviando requisição com:\", { lat: parsedLat, lon: parsedLon });\n    try {\n      const response = await api.get(\"/partners/nearby\", {\n        params: { lat: parsedLat, lon: parsedLon },\n      });\n      console.log(response.data); \n      setPartner(response.data);\n      setError(null);\n    } catch (err) {\n      console.error(\"Erro ao buscar parceiro próximo\", err);\n      setError(\"Erro ao buscar parceiro, tente novamente.\");\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h1>Buscar Parceiro Próximo</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Latitude\"\n        value={lat}\n        style={styles.input}\n        onChange={(e) => {\n          const value = e.target.value.trim();\n          if (value === \"-\" || value === \"\" || /^-?\\d*\\.?\\d*$/.test(value)) {\n            setLat(value);\n          }\n        }}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Longitude\"\n        value={lon}\n        style={styles.input}\n        onChange={(e) => {\n          const value = e.target.value.trim();\n          if (value === \"-\" || value === \"\" || /^-?\\d*\\.?\\d*$/.test(value)) {\n            setLon(value);\n          }\n        }}\n      />\n      <button style={styles.button} onClick={handleSearch}>Buscar</button>\n\n      {error && <p>{error}</p>}\n      {partner && (\n        <div>\n          <h2>{partner.trading_name}</h2>\n          <p>{partner.owner_name}</p>\n          <p>{partner.document}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\n\n\n\n\n\n"
        }
    ]
}